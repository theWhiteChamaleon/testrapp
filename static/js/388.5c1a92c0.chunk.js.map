{"version":3,"file":"static/js/388.5c1a92c0.chunk.js","mappings":"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","sources":["components/Button/Button.jsx","components/FileUploader/FileUploader.jsx","components/Modal/customModal.jsx","pages/mass-upload/massUpload.jsx","massuUploadIndex.js","store/droppedObjectSlice.js","store/index.js"],"sourcesContent":["import React from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst CustomButton = ({\r\n  variant = \"primary\",\r\n  size = \"md\",\r\n  type = \"button\",\r\n  disabled = false,\r\n  onClick,\r\n  className = \"\",\r\n  title,\r\n  text,\r\n  imageSrc,\r\n  ...props\r\n}) => {\r\n  return (\r\n    <Button\r\n      variant={variant}\r\n      size={size}\r\n      type={type}\r\n      disabled={disabled}\r\n      onClick={onClick}\r\n      className={className}\r\n      title={title}\r\n      {...props}\r\n    >\r\n      {imageSrc && (\r\n        <img\r\n          src={imageSrc}\r\n          alt={text}\r\n          style={{ width: \"20px\", height: \"20px\", marginRight: \"5px\" }}\r\n        />\r\n      )}{\" \"}\r\n      {/* Render image if provided */}\r\n      {text}\r\n    </Button>\r\n  );\r\n};\r\n\r\nCustomButton.propTypes = {\r\n  variant: PropTypes.string,\r\n  size: PropTypes.oneOf([\"sm\", \"md\", \"lg\"]),\r\n  type: PropTypes.oneOf([\"button\", \"submit\", \"reset\"]),\r\n  disabled: PropTypes.bool,\r\n  onClick: PropTypes.func,\r\n  className: PropTypes.string,\r\n  title: PropTypes.string,\r\n  text: PropTypes.string,\r\n  imageSrc: PropTypes.string, // PropType for image source\r\n};\r\n\r\nexport default CustomButton;\r\n","import React, { useState } from \"react\";\r\nimport { FileUploader } from \"react-drag-drop-files\";\r\n\r\nconst FileUpload = ({ fileTypes = [\"JPEG\", \"PNG\", \"GIF\", \"XLSX\", \"CSV\"], multiple = true, onUpload }) => {\r\n  const [files, setFiles] = useState([]);\r\n\r\n  const handleChange = (selectedFiles) => {\r\n    const fileArray = multiple ? [...selectedFiles] : [selectedFiles];\r\n    setFiles(fileArray);\r\n\r\n    // Callback function to send files to parent component\r\n    if (onUpload) {\r\n      onUpload(fileArray);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"file-upload-container\">\r\n      <h2>Drag & Drop Files</h2>\r\n      <div className=\"upload-area\">\r\n      <FileUploader\r\n        multiple={multiple}\r\n        handleChange={handleChange}\r\n        name=\"file\"\r\n        types={fileTypes}\r\n      />\r\n      <div className=\"file-list\">\r\n        {files.length > 0 ? (\r\n          files.map((file, index) => <p key={index}>üìÅ {file.name}</p>)\r\n        ) : (\r\n          <p>No files uploaded yet.</p>\r\n        )}\r\n      </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileUpload;\r\n","import React from \"react\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\n\r\nconst CustomModal = ({ show, onHide, title, children, footerButtons }) => {\r\n  return (\r\n    <Modal show={show} onHide={onHide} size=\"lg\" centered>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>{title || \"Modal Title\"}</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>{children}</Modal.Body>\r\n      <Modal.Footer>\r\n        {footerButtons\r\n          ? footerButtons.map((btn, index) => (\r\n              <Button key={index} variant={btn.variant || \"secondary\"} onClick={btn.onClick}>\r\n                {btn.label}\r\n              </Button>\r\n            ))\r\n          : <Button variant=\"secondary\" onClick={onHide}>Close</Button>}\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default CustomModal;\r\n","import React, {\r\n  useEffect,\r\n  useMemo,\r\n  useState,\r\n  useRef,\r\n  useCallback,\r\n} from \"react\";\r\nimport \"./Mockup.css\";\r\nimport { Dropdown, Form, Stack } from \"react-bootstrap\";\r\nimport CustomButton from \"../../components/Button/Button\";\r\nimport FileUpload from \"../../components/FileUploader/FileUploader\";\r\nimport CustomModal from \"../../components/Modal/customModal\";\r\n\r\nconst MassUpload = () => {\r\n  const [modalShow, setModalShow] = useState(false);\r\n  const handleFileUpload = (files) => {\r\n    console.log(\"Uploaded files:\", files);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Stack className=\"mt-3\" gap={4}>\r\n        {/* choose opration and download template stack */}\r\n\r\n        <Stack direction=\"horizontal\">\r\n          <Dropdown>\r\n            <Dropdown.Toggle variant=\"outline-primary btn-lg\" id=\"dropdown-basic\">\r\n              Choose Operations\r\n            </Dropdown.Toggle>\r\n\r\n            <Dropdown.Menu>\r\n              <Dropdown.Item href=\"#/action-1\">Action</Dropdown.Item>\r\n              <Dropdown.Item href=\"#/action-2\">Another action</Dropdown.Item>\r\n              <Dropdown.Item href=\"#/action-3\">Something else</Dropdown.Item>\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n\r\n          <CustomButton\r\n            variant=\"link ms-auto btn-lg\"\r\n            // onClick={handleSelectAll}\r\n            text=\"Downlad Template\"\r\n          />\r\n        </Stack>\r\n\r\n        {/* drag and drop conatiner */}\r\n        <FileUpload\r\n          fileTypes={[\"XLSX\"]}\r\n          multiple={false}\r\n          onUpload={handleFileUpload}\r\n        />\r\n        {/* Form-cta submit*/}\r\n\r\n        <Stack direction=\"horizontal\">\r\n          <Form.Check type=\"checkbox\" label=\"background\" />\r\n          <CustomButton\r\n            variant=\"primary ms-auto btn-lg\"\r\n            // onClick={handleSelectAll}\r\n            onClick={() => setModalShow(true)}\r\n            text=\"Submit\"\r\n          />\r\n        </Stack>\r\n      </Stack>\r\n      <CustomModal\r\n        show={modalShow}\r\n        onHide={() => setModalShow(false)}\r\n        title=\"Custom Modal Title\"\r\n        footerButtons={[\r\n          { label: \"Cancel\", variant: \"danger\", onClick: () => setModalShow(false) },\r\n          { label: \"Confirm\", variant: \"success\", onClick: () => alert(\"Confirmed!\") },\r\n        ]}\r\n      >\r\n        <p>This is a reusable modal component with dynamic content.</p>\r\n      </CustomModal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MassUpload;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom/client\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"./index.css\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./App.css\";\r\nimport \"./styles/variables.css\";\r\nimport MassUpload from \"./pages/mass-upload/massUpload\";\r\n\r\n// This function mounts the React app.\r\nlet root = null; // Global React root\r\nfunction start() {\r\n  requirejs([\"DS/PlatformAPI/PlatformAPI\"], (PlatformAPI) => {\r\n    window.PlatformAPI = PlatformAPI;\r\n  });\r\n  // console.log(\"[index.js] start() called. Mounting React app.\");\r\n  // Find the root element within the widget's body (if available)\r\n  let rootElement =\r\n    window.widget?.body?.querySelector(\"#root\") ||\r\n    document.getElementById(\"root\");\r\n\r\n  // If no root element exists, create one and append it to the widget body or document body.\r\n  if (!rootElement) {\r\n    rootElement = document.createElement(\"div\");\r\n    rootElement.id = \"root\";\r\n    if (window.widget && window.widget.body) {\r\n      window.widget.body.appendChild(rootElement);\r\n      // console.log(\"[index.js] Root element appended to widget.body.\");\r\n    } else {\r\n      document.body.appendChild(rootElement);\r\n      // console.log(\"[index.js] Root element appended to document.body.\");\r\n    }\r\n  } else {\r\n    // console.log(\"[index.js] Root element found.\");\r\n  }\r\n\r\n  if (!root) {\r\n    // console.log(\"[index.js] Creating new React root.\");\r\n    root = ReactDOM.createRoot(rootElement);\r\n  } else {\r\n    // console.log(\"[index.js] Reusing existing React root.\");\r\n  }\r\n\r\n  root.render(\r\n    <Provider store={store}>\r\n      <MassUpload />\r\n      <ToastContainer />\r\n    </Provider>\r\n\r\n    //  <div>hi i am just a div {console.log(\"no worries\")}</div>\r\n  );\r\n  // console.log(\"[index.js] React app rendered.\");\r\n}\r\n\r\nexport default function () {\r\n  // console.log(\"[index.js] üîç Checking if widget is available...\");\r\n\r\n  if (window.widget) {\r\n    // console.log(\"[index.js] ‚úÖ Widget detected! Registering onLoad event...\");\r\n\r\n    let hasOnLoadRun = false; // Prevent duplicate execution\r\n\r\n    window.widget.addEvent(\"onLoad\", () => {\r\n      if (hasOnLoadRun) {\r\n        console.warn(\r\n          \"[index.js] ‚è≥ onLoad was already executed. Ignoring duplicate trigger.\"\r\n        );\r\n        return;\r\n      }\r\n      hasOnLoadRun = true;\r\n\r\n      // console.log(\r\n      //   \"[index.js] ‚úÖ First-time onLoad event fired. Initializing app...\"\r\n      // );\r\n\r\n      start(); // This will initialize the React app\r\n    });\r\n  } else {\r\n    console.error(\r\n      \"[index.js] ‚ùå Widget not detected! onLoad cannot be registered.\"\r\n    );\r\n  }\r\n}\r\n\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nconst initialState = {\r\n  droppedObjectData: {\r\n    initialDraggedData: [],\r\n    cardData: {}, // Dragged object details\r\n    versions: [], // Object versions (revisions)\r\n    parentDetails: [], // Parent metadata\r\n    ownerData: {} /* data from cardOwnerResult */,\r\n  },\r\n  plantObjectData: {\r\n    allPlants: [],\r\n    initialAssignedPlants: [],\r\n    uniquePlants: [],\r\n    productChildren: [],\r\n    CAName: false,\r\n    headers: {},\r\n    proposedChanges: [],\r\n  },\r\n  loadingParentDetails: false, // Loading state for parent metadata\r\n  isDropped: false, // Indicates whether an object has been dropped\r\n  loading: false,\r\n  selectedTableRows: [],\r\n};\r\n\r\nconst droppedObjectSlice = createSlice({\r\n  name: \"droppedObject\",\r\n  initialState,\r\n  reducers: {\r\n    setInitialDroppedObjectData: (state, action) => {\r\n      state.droppedObjectData.initialDraggedData =\r\n        action.payload.initialDraggedData;\r\n    },\r\n    setDroppedObjectData: (state, action) => {\r\n      state.droppedObjectData = {\r\n        ...state.droppedObjectData,\r\n        ...action.payload,\r\n      };\r\n    },\r\n    setPlantObjectData: (state, action) => {\r\n      state.plantObjectData = {\r\n        ...state.plantObjectData,\r\n        ...action.payload,\r\n      };\r\n    },\r\n    setProductChildren: (state, action) => {\r\n      state.plantObjectData.productChildren = action.payload;\r\n    },\r\n    setProposedChanges: (state, action) => {\r\n      state.plantObjectData.proposedChanges = action.payload;\r\n    },\r\n    setHeaders: (state, action) => {\r\n      state.plantObjectData.headers = action.payload;\r\n    },\r\n    setCAName: (state, action) => {\r\n      state.plantObjectData.CAName = action.payload;\r\n    },\r\n\r\n    setParentDetailsLoading: (state, action) => {\r\n      state.loadingParentDetails = action.payload;\r\n    },\r\n    setIsDropped: (state, action) => {\r\n      state.isDropped = action.payload;\r\n    },\r\n    setLoading: (state, action) => {\r\n      state.loading = action.payload;\r\n    },\r\n    setSelectedTableRows: (state, action) => {\r\n      state.selectedTableRows = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  setInitialDroppedObjectData,\r\n  setDroppedObjectData,\r\n  setPlantObjectData,\r\n  setProductChildren,\r\n  setCAName,\r\n  setHeaders,\r\n  setParentDetailsLoading,\r\n  setIsDropped,\r\n  setLoading,\r\n  setSelectedTableRows,\r\n  setProposedChanges,\r\n} = droppedObjectSlice.actions;\r\nexport default droppedObjectSlice.reducer;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport logger from \"redux-logger\";\r\nimport droppedObjectReducer from \"./droppedObjectSlice\";\r\n\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    droppedObject: droppedObjectReducer,\r\n  },\r\n  // middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(logger),\r\n});\r\n\r\nexport default store;\r\n"],"names":["_ref","variant","size","type","disabled","onClick","className","title","text","imageSrc","props","_objectWithoutProperties","_excluded","_jsxs","Button","_objectSpread","children","_jsx","src","alt","style","width","height","marginRight","fileTypes","multiple","onUpload","files","setFiles","useState","FileUploader","handleChange","selectedFiles","fileArray","name","types","length","map","file","index","show","onHide","footerButtons","Modal","centered","Header","closeButton","Title","Body","Footer","btn","label","MassUpload","modalShow","setModalShow","_Fragment","Stack","gap","direction","Dropdown","Toggle","id","Menu","Item","href","CustomButton","FileUpload","console","log","Form","Check","CustomModal","alert","root","window","widget","hasOnLoadRun","addEvent","warn","_window$widget","_window$widget$body","requirejs","PlatformAPI","rootElement","body","querySelector","document","getElementById","createElement","appendChild","ReactDOM","render","Provider","store","ToastContainer","start","error","droppedObjectSlice","createSlice","initialState","droppedObjectData","initialDraggedData","cardData","versions","parentDetails","ownerData","plantObjectData","allPlants","initialAssignedPlants","uniquePlants","productChildren","CAName","headers","proposedChanges","loadingParentDetails","isDropped","loading","selectedTableRows","reducers","setInitialDroppedObjectData","state","action","payload","setDroppedObjectData","setPlantObjectData","setProductChildren","setProposedChanges","setHeaders","setCAName","setParentDetailsLoading","setIsDropped","setLoading","setSelectedTableRows","actions","configureStore","reducer","droppedObject","droppedObjectReducer"],"sourceRoot":""}